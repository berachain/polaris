# SPDX-License-Identifier: BUSL-1.1
#
# Copyright (C) 2023, Berachain Foundation. All rights reserved.
# Use of this software is govered by the Business Source License included
# in the LICENSE file of this repository and at www.mariadb.com/bsl11.
#
# ANY USE OF THE LICENSED WORK IN VIOLATION OF THIS LICENSE WILL AUTOMATICALLY
# TERMINATE YOUR RIGHTS UNDER THIS LICENSE FOR THE CURRENT AND ALL OTHER
# VERSIONS OF THE LICENSED WORK.
#
# THIS LICENSE DOES NOT GRANT YOU ANY RIGHT IN ANY TRADEMARK OR LOGO OF
# LICENSOR OR ITS AFFILIATES (PROVIDED THAT YOU MAY USE A TRADEMARK OR LOGO OF
# LICENSOR AS EXPRESSLY REQUIRED BY THIS LICENSE).
#
# TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE LICENSED WORK IS PROVIDED ON
# AN “AS IS” BASIS. LICENSOR HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS,
# EXPRESS OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND
# TITLE.

name: pipeline

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}-pipeline
  cancel-in-progress: true

jobs:
  ci:
    strategy:
      matrix:
        args: ["build", "lint", "test-unit-race", "test-unit-cover"]
        os: [polaris-linux-latest]
        go-version: [1.21.6]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache-dependency-path: "**/*.sum"
          
      - name: Run ${{ matrix.args }}
        run: |
          make ${{ matrix.args }}
        env:
          GOPATH: /home/runner/go
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage-${{ matrix.args }}.txt
          retention-days: 1
        if: ${{ matrix.args == 'test-unit-cover' }}

  codecov:
    name: codecov(uploader, polaris-linux-latest)
    runs-on: polaris-linux-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download code coverage results
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
